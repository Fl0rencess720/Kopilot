---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: kopilots.kopilot.fl0rencess720
spec:
  group: kopilot.fl0rencess720
  names:
    kind: Kopilot
    listKind: KopilotList
    plural: kopilots
    singular: kopilot
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .status.lastCheckTime
      name: Last Check
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Kopilot is the Schema for the kopilots API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KopilotSpec defines the desired state of Kopilot
            properties:
              knowledgeBase:
                description: KnowledgeBaseSpec is a placeholder for Day 6.
                properties:
                  configMapRef:
                    description: ConfigMapRef references a ConfigMap containing knowledge
                      base articles.
                    type: string
                type: object
              llm:
                description: LLMSpec defines the AI configuration.
                properties:
                  deepseek:
                    properties:
                      apiKeySecretRef:
                        description: |-
                          APIKeySecretRef is a reference to a Kubernetes Secret.
                          The secret must contain a key (e.g., 'apiKey') with the DeepSeek API key.
                        properties:
                          key:
                            description: Key within the Secret.
                            type: string
                          name:
                            description: Name of the Secret.
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace where the Secret is located.
                              If not specified, defaults to the same namespace as the Kopilot instance.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      modelName:
                        default: deepseek-2.5-flash
                        description: ModelName is the specific DeepSeek model to use.
                        type: string
                    required:
                    - apiKeySecretRef
                    - modelName
                    type: object
                  gemini:
                    description: GeminiSpec defines Gemini-specific configuration.
                    properties:
                      apiKeySecretRef:
                        description: |-
                          APIKeySecretRef is a reference to a Kubernetes Secret.
                          The secret must contain a key (e.g., 'apiKey') with the Gemini API key.
                        properties:
                          key:
                            description: Key within the Secret.
                            type: string
                          name:
                            description: Name of the Secret.
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace where the Secret is located.
                              If not specified, defaults to the same namespace as the Kopilot instance.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      modelName:
                        default: gemini-2.5-flash
                        description: ModelName is the specific Gemini model to use.
                        type: string
                      thinking:
                        default: true
                        description: Thinking enables the AI's reasoning capabilities.
                        type: boolean
                    required:
                    - apiKeySecretRef
                    - modelName
                    - thinking
                    type: object
                  language:
                    default: en
                    description: Language specifies the language of the logs.
                    enum:
                    - en
                    - ch
                    type: string
                  model:
                    default: gemini
                    description: Model specifies the AI model to be used for analysis.
                    enum:
                    - gemini
                    - deepseek
                    type: string
                required:
                - language
                - model
                type: object
              logSource:
                description: LogSourceSpec defines the source of logs.
                properties:
                  loki:
                    description: This is only used if Type is "Loki".
                    properties:
                      address:
                        type: string
                      logqlQuery:
                        description: |-
                          LogQLQuery is the query to execute against Loki to fetch logs.
                          The query can use variables like {pod}, {namespace}, {container}.
                        type: string
                    required:
                    - address
                    type: object
                  type:
                    default: Kubernetes
                    description: Type specifies the log source type.
                    enum:
                    - Kubernetes
                    - Loki
                    type: string
                required:
                - type
                type: object
              notification:
                description: NotificationSpec defines where and how to send notifications.
                properties:
                  sinks:
                    description: Sinks is a list of notification channels.
                    items:
                      description: NotificationSink defines a single notification
                        channel.
                      properties:
                        feishu:
                          description: |-
                            Feishu configures notifications to a Feishu (Lark) webhook.
                            In the future, you could add other types like Slack here.
                          properties:
                            signatureSecretRef:
                              description: |-
                                SignatureSecretRef is a reference to a Kubernetes Secret that holds the webhook signature.
                                The secret should contain a key (e.g., 'signature') with the Feishu webhook signature.
                                This is required for webhooks that use custom signatures for security.
                              properties:
                                key:
                                  description: Key within the Secret.
                                  type: string
                                name:
                                  description: Name of the Secret.
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace where the Secret is located.
                                    If not specified, defaults to the same namespace as the Kopilot instance.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                            webhookSecretRef:
                              description: |-
                                WebhookSecretRef is a reference to a Kubernetes Secret.
                                The secret must contain a key (e.g., 'url') with the Feishu webhook URL.
                              properties:
                                key:
                                  description: Key within the Secret.
                                  type: string
                                name:
                                  description: Name of the Secret.
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace where the Secret is located.
                                    If not specified, defaults to the same namespace as the Kopilot instance.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          required:
                          - signatureSecretRef
                          - webhookSecretRef
                          type: object
                        name:
                          description: Name is a unique identifier for this sink.
                          type: string
                      required:
                      - name
                      type: object
                    minItems: 1
                    type: array
                required:
                - sinks
                type: object
              schedule:
                type: string
              selector:
                description: |-
                  A label selector is a label query over a set of resources. The result of matchLabels and
                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                  label selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - llm
            - logSource
            - notification
            - schedule
            - selector
            type: object
          status:
            description: KopilotStatus defines the observed state of Kopilot.
            properties:
              conditions:
                description: |-
                  Conditions store the status of the Kopilot instance.
                  This is the modern way to represent status in Kubernetes.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAnalysisResult:
                description: LastAnalysisResult is a summary of the latest AI analysis.
                type: string
              lastCheckTime:
                description: LastCheckTime is the timestamp of the last log fetch.
                format: date-time
                type: string
              lastError:
                description: LastError records the last error encountered by the operator
                  for this instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
